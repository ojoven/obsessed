// sass-lint:disable no-vendor-prefixes,no-duplicate-properties
// ==============================================
// MIXINS
// ==============================================

// TRANSITION
@mixin transition($transition...) {
	-webkit-transition: $transition;
	transition: $transition;
}

// BACKGROUND GRADIENT COLOR
@mixin bbg($d1, $d2, $color1, $color2) {
	background-image: -moz-linear-gradient($d1, $color1 0, $color2 100%);
	background-image: -webkit-gradient(linear, $d1 $d1, $d1 $d2, color-stop(0, $color1), color-stop(100%, $color2));
	background-image: -webkit-linear-gradient($d1, $color1 0, $color2 100%);
	background-image: -o-linear-gradient($d1, $color1 0, $color2 100%);
	background-image: -ms-linear-gradient($d1, $color1 0, $color2 100%);
	background-image: linear-gradient(to $d2, $color1 0, $color2 100%);
}

// BOX SHADOW
@mixin box-shadow($val) {
	-webkit-box-shadow: $val;
	box-shadow: $val;
}

// PLACEHOLDER
@mixin placeholder($color) {

	::-webkit-input-placeholder {
		color: $color;
	}

	:-moz-placeholder {
		color: $color;
	}

	::-moz-placeholder {
		color: $color;
	}

	:-ms-input-placeholder {
		color: $color;
	}

}

// ARROW
@mixin arrow($direction, $size, $color) {
	width: 0;
	height: 0;
	@if $direction == 'left' {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
	} @else if $direction == 'right' {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
	} @else if $direction == 'top' {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $color;
	} @else if $direction == 'bottom' {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
	}
}

// TRANSLATES
@mixin translate($x, $y) {
	@include transform(translate($x, $y));
}

@mixin translateX($x) {
	@include transform(translate3d($x, 0, 0));
}

@mixin translateY($y) {
	@include transform(translate3d(0, $y, 0));
}

@mixin translateZ($z) {
	@include transform(translate3d(0, 0, $z));
}

@mixin translate3d($x, $y, $z) {
	@include transform(translate3d($x, $y, $z));
}

// Common center positioning translates
@mixin Y-50 {
	@include translateY(-50%);
}

@mixin X-50 {
	@include translateX(-50%);
}

@mixin X-Y-50 {
	@include translate(-50%, -50%);
}

// TRANSFORMS
@mixin transform($transforms) {
	-webkit-transform: $transforms;
	transform: $transforms;
}

// ROTATE
@mixin rotate($deg) {
	@include transform(rotate(#{$deg}deg));
}

// SCALE
@mixin scale($scale) {
	@include transform(scale($scale));
}

@mixin scale2d($scalex, $scaley) {
	@include transform(scale($scalex, $scaley));
}
